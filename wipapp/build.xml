<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="dist" name="WIPapp">
	<description>
        WIPapp: Application Wrapper for WIP Edit Plugin
    </description>
	<property file="wipapp.properties"/>

	<taskdef classname="weblogic.ant.taskdefs.management.WLDeploy" name="wldeploy">
		<classpath>
			<pathelement location="${wls}/weblogic.jar"/>
		</classpath>
	</taskdef>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
	
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
		<echo>WIPapp Ant Project Started.</echo>
	</target>
	
	
<!-- COMPILE -->	
	<target depends="init" description="compile the source " name="compile">
		<!-- Compile the java code from ${src} into ${build} -->
		<javac destdir="${build}" includeantruntime="false" source="${javaVersion}" srcdir="${src}" target="${javaVersion}">
			<classpath>
				<pathelement path="${classpath}"/>
				<fileset dir="${third}">
					<include name="**/*.jar"/>
				</fileset>
				<pathelement location="classes"/>
				<dirset dir="${build}">
					<include name="*/**"/>
				</dirset>
				<filelist dir="${jspjar}" files="javax.servlet_1.0.0.0_2-5.jar,javax.jsp_1.1.0.0_2-1.jar,glassfish.el_2.2.0.jar" id="JSPRuntime"/>
				<filelist dir="${wls}" files="weblogic.jar,oracle.jrf_11.1.1/jrf.jar" id="WS"/>
			</classpath>
		</javac>
		<echo>Copying additional files</echo>
		<copy todir="${build}/oracle/dws">
			<filelist dir="${src}/oracle/dws" files="CompositionService_xsd_1.xsd,CompositionService_xsd_2.xsd,CompositionService.wsdl,CompositionService.xml,CompositionServiceProxy.proxy" id="webservicestuff"/>
		</copy>

		<echo>Replacing text strings.</echo>
		<replace
			 file="${build}/oracle/dws/CompositionService.wsdl"
			 token="@{dwsEP}@" 
			 value="${dwsProto}://${dwsHostPort}/${dwsContext}V0${dwsASLINE}"/>	
	</target>
	
<!-- DEPLOY -->	
	<target depends="dist" name="deploy">
		<trycatch>
			<try>
				<echo>Attempting to Undeploy...</echo>
				<wldeploy action="undeploy" adminurl="t3://${wls.hostname}:${wls.port}" failonerror="false" name="${deploy.name}" password="${wls.password}" targets="${deploy.target}" user="${wls.username}" verbose="true"/>
			</try>
			<catch>
				<echo>Unable to undeploy, maybe it isn't deployed?</echo>
			</catch>
			<finally>
				<echo>Copying file to server...</echo>
				<scp file="${deploy}/wipapp-${DSTAMP}.war" todir="oracle:Documaker12@rbc:/home/oracle/wipapp-${DSTAMP}.war"/>
				<wldeploy action="deploy" adminurl="t3://${wls.hostname}:${wls.port}" debug="true" name="${deploy.name}" nostage="true" password="${wls.password}" remote="true" source="/home/oracle/wipapp-${DSTAMP}.war" targets="${deploy.target}" user="${wls.username}" verbose="true"/>
			</finally>
		</trycatch>
	</target>

	<target name="redeploy">
		<wldeploy action="redeploy" adminurl="t3://${wls.hostname}:${wls.port}" name="${deploy.name}" password="${wls.password}" targets="${deploy.target}" user="${wls.username}" verbose="true"/>
	</target>
	<target name="undeploy">
		<wldeploy action="undeploy" adminurl="t3://${wls.hostname}:${wls.port}" failonerror="false" name="${deploy.name}" password="${wls.password}" targets="${deploy.target}" user="${wls.username}" verbose="true"/>
	</target>
	<target depends="build" description="build WAR file for remote load" name="dist">
		<jar basedir="${dist}" jarfile="${deploy}/wipapp-${DSTAMP}.war"/>
	</target>
	
	
<!-- BUILD -->	
	<target depends="compile" description="generate the distribution" name="build">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/WEB-INF/lib"/>
		<echo>Copying WEB files</echo>
		<copy todir="${dist}">
			<fileset dir="${web}">
		</fileset>
		</copy>
		
		<echo>Replacing text strings</echo>
			<replace
			 file="${dist}/WEB-INF/weblogic.xml"
			 token="@{vetGroupName}@"
			 value="${vetGroupName}"/>	 
			<replace
			 file="${dist}/WEB-INF/weblogic.xml"
			 token="@{prepGroupName}@"
			 value="${prepGroupName}"/>	
			<replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{hostUrlPrefix}@" 
			 value="${hostUrlPrefix}"/>
			<replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{logLevel}@" 
			 value="${logLevel}"/>
			<replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{pegaEndpoint}@"
			 value="${pegaEndpoint}"/>	 
			<replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{vetGroupName}@"
			 value="${vetGroupName}"/>	 
			<replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{prepGroupName}@"
			 value="${prepGroupName}"/>	 
			 <replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{prepGroupId}@"
			 value="${prepGroupId}"/>	 
			 <replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{vetGroupId}@"
			 value="${vetGroupId}"/>	 
			 <replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{sslTransport}@"
			 value="${sslTransport}"/>
			 <replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{realmName}@"
			 value="${realmName}"/>
			 <replace
			 file="${dist}/WEB-INF/web.xml"
			 token="@{authMethod}@"
			 value="${authMethod}"/>		 
		
		
		<!-- minify JS -->
		<echo message="Compressing Javascript..." />
    	<java jar="${ANT_HOME}/lib/${yuicompressor}.jar" fork="true">
        <!--<arg value="-v" /-->
        <arg value="-o" />
        <arg value="'.js$:-min.js'"/>        
        <arg value="${dist}/js/wipedit.js" /> <!-- input path for JS files -->
        <classpath>
            <pathelement location="${ANT_HOME}/lib/${yuicompressor}"/>
        </classpath>
    </java>
		
		<!--jar jarfile="${dist}/WEB-INF/lib/wipapp-servlet-${DSTAMP}.jar" basedir="${build}"/-->
		<echo>Copying SOURCE files</echo>
		<mkdir dir="${dist}/source"/>
		<jar basedir="${src}" jarfile="${dist}/source/wipapp-sources-${DSTAMP}.jar"/>
		<echo>Copying CLASS files</echo>
		<copy todir="${dist}/WEB-INF/classes">
			<fileset dir="${build}">
				<include name="*/**"/>
			</fileset>
		</copy>
		<echo>Copying third-party JAR files</echo>
		<copy todir="${dist}/WEB-INF/lib">
			<fileset dir="${third}"/>
		</copy>
	</target>
	
<!-- CLEAN -->	
	
	<target description="clean up" name="clean">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>
