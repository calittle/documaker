create or replace TRIGGER JOBS_BEFOREUPD_TRG 
   BEFORE UPDATE ON JOBS
      FOR EACH ROW  
DECLARE
   BCHID NUMBER;
   JOBID NUMBER;

CURSOR fetch_audit_details
   IS 
    SELECT BCHS_RCPS.BCH_ID, BCHS_RCPS.JOB_ID FROM BCHS_RCPS WHERE BCHS_RCPS.JOB_id = :NEW.JOB_id;

fetch_audit_row fetch_audit_details%ROWTYPE;

         BEGIN 
            IF (:NEW.JOBSTATUS<>:OLD.JOBSTATUS AND 
                (:NEW.JOBSTATUS IS NOT NULL AND (MOD(:NEW.JOBSTATUS,100)>=40 AND MOD(:NEW.JOBSTATUS,100)<=49)) AND
                (:OLD.JOBSTATUS IS NULL OR (:OLD.JOBSTATUS IS NOT NULL AND (MOD(:OLD.JOBSTATUS,100)<40 OR MOD(:OLD.JOBSTATUS,100)>49)))) THEN 
               :NEW.JOBSTATUS:=:NEW.JOBSTATUS;
            ELSIF (:NEW.JOBBCHERR>:OLD.JOBBCHERR AND :NEW.JOBBCHERR>0 AND (MOD(:NEW.JOBSTATUS,100)<40 OR MOD(:NEW.JOBSTATUS,100)>49)) THEN 
               :NEW.JOBSTATUS:=441;
            ELSIF (:NEW.JOBRCPERR>:OLD.JOBRCPERR AND :NEW.JOBRCPERR>0 AND (MOD(:NEW.JOBSTATUS,100)<40 OR MOD(:NEW.JOBSTATUS,100)>49)) THEN 
               :NEW.JOBSTATUS:=341;
            ELSIF (:NEW.JOBTRNERR>:OLD.JOBTRNERR AND :NEW.JOBTRNERR>0 AND (MOD(:NEW.JOBSTATUS,100)<40 OR MOD(:NEW.JOBSTATUS,100)>49)) THEN 
               :NEW.JOBSTATUS:=241;
            ELSIF (:NEW.JOBTRNWIP>:OLD.JOBTRNWIP AND :NEW.JOBTRNWIP>0 AND :NEW.JOBSTATUS<290 AND (MOD(:NEW.JOBSTATUS,100)<40 OR MOD(:NEW.JOBSTATUS,100)>49)) THEN 
               :NEW.JOBSTATUS:=290;
            ELSIF (:NEW.JOBTRNTOTAL=(:NEW.JOBTRNPROC+:NEW.JOBTRNWIP) AND :NEW.JOBTRNTOTAL>0 AND :NEW.JOBTRNWIP>0) THEN 
            	 :NEW.JOBTRNSCH:=0; 
            	 :NEW.JOBSTATUS:=290;
            ELSIF (:OLD.JOBRCPTOTAL<1 AND :NEW.JOBRCPTOTAL>0 AND :NEW.JOBSTATUS<300 AND (MOD(:NEW.JOBSTATUS,100)<40 OR MOD(:NEW.JOBSTATUS,100)>49) AND :NEW.JOBTRNWIP<1) THEN 
               :NEW.JOBSTATUS:=311;
            ELSIF (:OLD.JOBBCHTOTAL<1 AND :NEW.JOBBCHTOTAL>0 AND :NEW.JOBSTATUS<400 AND (MOD(:NEW.JOBSTATUS,100)<40 OR MOD(:NEW.JOBSTATUS,100)>49) AND :NEW.JOBTRNWIP<1) THEN 
               :NEW.JOBSTATUS:=411;
            END IF;

            IF (:NEW.JOBBCHTOTAL=:NEW.JOBBCHPROC AND :NEW.JOBBCHTOTAL>0 AND
                :NEW.JOBRCPTOTAL=:NEW.JOBRCPPROC AND :NEW.JOBRCPTOTAL>0 AND
                :NEW.JOBTRNTOTAL=:NEW.JOBTRNPROC AND :NEW.JOBTRNTOTAL>0 AND
                 (:NEW.JOBBCHPROC<>:OLD.JOBBCHPROC OR 
                  :NEW.JOBRCPPROC<>:OLD.JOBRCPPROC OR  
                  :NEW.JOBTRNPROC<>:OLD.JOBTRNPROC ) AND 
                :NEW.JOBSTATUS<900 AND :NEW.JOBSTATUS>0) THEN 
               :NEW.JOBSTATUS:=999;
            END IF;
            
            IF (:OLD.JOBSTATUS<>416 AND 
                :NEW.JOBTRNTOTAL<>0 AND
                :NEW.JOBTRNSCH<>0 AND
                :NEW.JOBTRNERR=0 AND
                :NEW.JOBTRNTOTAL=(:NEW.JOBTRNPROC+:NEW.JOBTRNSCH)) THEN
                   update bchs a1 set bchstartingtime = (TO_TIMESTAMP('01-SEP-01 10.31.19 AM', 'DD-MON-YY HH.MI.SS AM')) 
                   where exists (select a.bch_id, a.job_id from bchs_rcps a 
                      where :NEW.job_id=a.job_id and a1.bch_id = a.bch_id);                 
               :NEW.JOBSTATUS:=416;
            END IF;
            
            IF (:NEW.JOBBCHTOTAL=:NEW.JOBBCHPROC AND :NEW.JOBBCHTOTAL>0) THEN
               SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBBCHENDTIME FROM DUAL;
               :NEW.JOBBCHSCH:=0;
            END IF;
            IF (:NEW.JOBRCPTOTAL=:NEW.JOBRCPPROC AND :NEW.JOBRCPTOTAL>0) THEN
               SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBRCPENDTIME FROM DUAL;
               :NEW.JOBRCPSCH:=0;
            END IF; 
            IF (:NEW.JOBTRNTOTAL=:NEW.JOBTRNPROC AND :NEW.JOBTRNTOTAL>0) THEN
               SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBTRNENDTIME FROM DUAL;
               :NEW.JOBTRNSCH:=0;
            END IF; 

            IF (:NEW.JOBSTATUS=111 AND :OLD.JOBSTATUS<>:NEW.JOBSTATUS AND :NEW.JOBSTARTTIME IS NULL) THEN
               SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBSTARTTIME FROM DUAL;
            ELSIF (:NEW.JOBSTATUS=211 AND :OLD.JOBSTATUS<>:NEW.JOBSTATUS AND :NEW.JOBTRNSTARTTIME IS NULL) THEN
               SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBTRNSTARTTIME FROM DUAL;
            ELSIF (:NEW.JOBSTATUS=311 AND :OLD.JOBSTATUS<>:NEW.JOBSTATUS AND :NEW.JOBRCPSTARTTIME IS NULL) THEN
               SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBRCPSTARTTIME FROM DUAL;
            ELSIF (:NEW.JOBSTATUS=411 AND :OLD.JOBSTATUS<>:NEW.JOBSTATUS AND :NEW.JOBBCHSTARTTIME IS NULL) THEN
               SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBBCHSTARTTIME FROM DUAL;
            ELSIF (:NEW.JOBSTATUS=999 AND :OLD.JOBSTATUS<>:NEW.JOBSTATUS AND :NEW.JOBENDTIME IS NULL) THEN
               IF (:NEW.JOBBCHENDTIME IS NULL) THEN 
                  SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBBCHENDTIME FROM DUAL;
               END IF;
               IF (:NEW.JOBRCPENDTIME IS NULL) THEN 
                  SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBRCPENDTIME FROM DUAL;
               END IF;
               IF (:NEW.JOBBCHENDTIME IS NULL) THEN 
                  SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBBCHENDTIME FROM DUAL;
               END IF;
               SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBENDTIME FROM DUAL;
            END IF;
            IF (:NEW.JOBREPLYSENT=1 AND :NEW.JOBREPLYSENT<>:OLD.JOBREPLYSENT) THEN
            		SELECT TO_TIMESTAMP(TO_CHAR(SYSTIMESTAMP AT TIME ZONE 'GMT','YYYY.MM.DD HH24:MI:SS.FF'),'YYYY.MM.DD HH24:MI:SS.FF') INTO :NEW.JOBREPLYSENTTIME FROM DUAL;	
            END IF;
         END JOBS_BEFOREUPD_TRG;