#
# LICENSE UPL 1.0
#
# Copyright (c) 2018, 2020 Oracle and/or its affiliates.
#
# Since: July, 2018
# Author: gerald.venzl@oracle.com
# Description: Creates an Oracle database Vagrant virtual machine.
# Optional plugins:
#     vagrant-env (use .env files for configuration)
#     vagrant-proxyconf (if you don't have direct access to the Internet)
#         see https://github.com/tmatilai/vagrant-proxyconf for configuration
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#

# -*- mode: ruby -*-
# vi: set ft=ruby :

#VAGRANT_LOG=debug


# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

# Box metadata location and box name
BOX_URL = "https://oracle.github.io/vagrant-projects/boxes"
BOX_NAME = "oraclelinux/7"

# UI object for printing information
ui = Vagrant::UI::Prefixed.new(Vagrant::UI::Colored.new, "vagrant")

# Define constants
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # Use vagrant-env plugin if available
  if Vagrant.has_plugin?("vagrant-env")
    config.env.load(".env.local", ".env") # enable the plugin
  end

  # VM name
  VM_NAME = default_s('VM_NAME', 'odee-1250-vagrant')

  # Memory/Swap for the VM.
  # Note: SWAP should be 100% of mem size and the VM box defaults to 50%, so we add another 50%...
  VM_MEMORY = default_i('VM_MEMORY', 8192) 
  VM_SWAP = default_s('VM_SWAP','4G')

  # VM time zone
  # If not specified, will be set to match host time zone (if possible)
  VM_SYSTEM_TIMEZONE = default_s('VM_SYSTEM_TIMEZONE', host_tz)

  VM_ORACLE_BASE = default_s('VM_ORACLE_BASE', '/opt/oracle')
  VM_ORACLE_HOME = default_s('VM_ORACLE_HOME', '/opt/oracle/product/19c/dbhome_1')
  VM_ORACLE_SID = default_s('VM_ORACLE_SID', 'ORCLCDB')
  VM_ORACLE_PDB = default_s('VM_ORACLE_PDB', 'ORCLPDB1')
  VM_ORACLE_CHARACTERSET = default_s('VM_ORACLE_CHARACTERSET', 'AL32UTF8')

  # Oracle Database edition
  # Valid values are 'EE' for Enterprise Edition or 'SE2' for Standard Edition 2
  VM_ORACLE_EDITION = default_s('VM_ORACLE_EDITION', 'EE')
  VM_LISTENER_PORT = default_i('VM_LISTENER_PORT', 1521)
  VM_EM_EXPRESS_PORT = default_i('VM_EM_EXPRESS_PORT', 5500)

############################################################################

  # If left blank, the password will be generated automatically
  # NOTE: If you need to reprovision, and you have already established the 
  # password, you need to provide it here or in .env/.env.local files.
  # Recommended procedure is to set passwords in the .env/.env.local files
  # which requires installing the vagrant-env plugin.

  # Oracle Database password for SYS, SYSTEM and PDBADMIN accounts
  VM_ORACLE_PWD = default_s('VM_ORACLE_PWD', '')

  # WebLogic password for administrative user
  VM_WLS_PWD = default_s('VM_WLS_PWD','')

  # Documaker adminstrator user password
  VM_ODEE_PWD = default_s('VM_ODEE_PWD','')

  # Documaker schema password (used for both DMKR_ASLINE and DMKR_ADMIN)
  VM_ODEE_SCHEMA_PWD = default_s('VM_ODEE_SCHEMA_PWD','')

############################################################################

  VM_ADFSOA = default_s('VM_ADFSOA','SOA')
  VM_MW_HOME = default_s('VM_MW_HOME','/opt/oracle/middleware')
  VM_UPDI_HOME = default_s('VM_UPDI_HOME','/opt/ibm/updateinstaller')
  VM_WAS_HOME = default_s('VM_WAS_HOME','/opt/ibm/was')
  VM_WAS_ADMIN = default_s('VM_WAS_ADMIN','wasadmin')
  VM_MW_PORT_ADMIN = default_i('VM_WLS_PORT_ADMIN',7001)
  VM_MW_PORT_DMKR = default_i('VM_MW_PORT_DMKR',10001)
  VM_MW_PORT_JMS = default_i('VM_MW_PORT_JMS',11001)
  VM_MW_PORT_IDM = default_i('VM_MW_PORT_IDM',12001) 
  VM_MW_SSLPORT_ADMIN = default_i('VM_WLS_SSLPORT_ADMIN',7002)
  VM_MW_SSLPORT_DMKR = default_i('VM_MW_SSLPORT_DMKR',10002)
  VM_MW_SSLPORT_JMS = default_i('VM_MW_SSLPORT_JMS',11002)
  VM_MW_SSLPORT_IDM = default_i('VM_MW_SSLPORT_IDM',12002) 
  
  VM_JAVA_PATH = default_s('VM_JAVA_PATH','/usr/java/jdk1.8.0_311-amd64')  
  VM_ZIP_FMW = default_s('VM_ZIP_FMW','V983368-01.zip')  
  VM_JAR_FMW = default_s('VM_JAR_FMW','fmw_12.2.1.4.0_infrastructure.jar') # this is inside the VM_ZIP_FMW
  VM_ZIP_ORACLEDB = default_s('VM_ZIP_ORACLEDB','LINUX.X64_193000_db_home.zip')
  VM_ZIP_ODEE = default_s('VM_ZIP_ODEE','ODEE12.5.00.29909linux64.zip')
  VM_RPM_JAVA = default_s('VM_RPM_JAVA','jdk-8u311-linux-x64.rpm')
  VM_ODEE_HOME = default_s('VM_ODEE_HOME','/opt/oracle/odee')
  VM_ODEE_DOMAIN = default_s('VM_ODEE_DOMAIN','odee')
end

# Convenience methods
def default_s(key, default)
  ENV[key] && ! ENV[key].empty? ? ENV[key] : default
end

def default_i(key, default)
  default_s(key, default).to_i
end

def host_tz
  # get host time zone for setting VM time zone
  # if host time zone isn't an integer hour offset from GMT, fall back to UTC
  offset_sec = Time.now.gmt_offset
  if (offset_sec % (60 * 60)) == 0
    offset_hr = ((offset_sec / 60) / 60)
    timezone_suffix = offset_hr >= 0 ? "-#{offset_hr.to_s}" : "+#{(-offset_hr).to_s}"
    'Etc/GMT' + timezone_suffix
  else
    'UTC'
  end
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = BOX_NAME
  config.vm.box_url = "#{BOX_URL}/#{BOX_NAME}.json"
  config.vm.define VM_NAME
  
  # Provider-specific configuration
  config.vm.provider "virtualbox" do |v|
    v.memory = VM_MEMORY
    v.name = VM_NAME
  end
  config.vm.provider :libvirt do |v|
    v.memory = VM_MEMORY
  end

  # add proxy configuration from host env - optional
  if Vagrant.has_plugin?("vagrant-proxyconf")
    ui.info "Getting Proxy Configuration from Host..."
    has_proxy = false
    ["http_proxy", "HTTP_PROXY"].each do |proxy_var|
      if proxy = ENV[proxy_var]
        ui.info "HTTP proxy: " + proxy
        config.proxy.http = proxy
        has_proxy = true
        break
      end
    end

    ["https_proxy", "HTTPS_PROXY"].each do |proxy_var|
      if proxy = ENV[proxy_var]
        ui.info "HTTPS proxy: " + proxy
        config.proxy.https = proxy
        has_proxy = true
        break
      end
    end

    if has_proxy
      # Only consider no_proxy if we have proxies defined.
      no_proxy = ""
      ["no_proxy", "NO_PROXY"].each do |proxy_var|
        if ENV[proxy_var]
          no_proxy = ENV[proxy_var]
          ui.info "No proxy: " + no_proxy
          no_proxy += ","
          break
        end
      end
      config.proxy.no_proxy = no_proxy + "localhost,127.0.0.1"
    end
  else
    ["http_proxy", "HTTP_PROXY", "https_proxy", "HTTPS_PROXY"].each do |proxy_var|
      if ENV[proxy_var]
        ui.warn 'To enable proxies in your VM, install the vagrant-proxyconf plugin'
        break
      end
    end
  end

  # VM hostname
  config.vm.hostname = VM_NAME

  # Oracle port forwarding
  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true
  config.vm.network "forwarded_port", guest: 9443, host: 9443 # WAS admin console
  config.vm.network "forwarded_port", guest: 9043, host: 9043 # WAS admin console
  config.vm.network "forwarded_port", guest: 10389, host: 10389 # ApacheDS
  config.vm.network "forwarded_port", guest: 8080, host: 8080 # ApacheDS Admin
  config.vm.network "forwarded_port", guest: 7001, host: 7001 # WLS console
  config.vm.network "forwarded_port", guest: 10001, host: 10001 # Documaker Administrator
  config.vm.network "forwarded_port", guest: 11001, host: 11001 # Documaker JMS
  config.vm.network "forwarded_port", guest: 12001, host: 12001 # Documaker Interactive
  config.vm.network "forwarded_port", guest: 10002, host: 10002 # Documaker Administrator Secure
  config.vm.network "forwarded_port", guest: 11002, host: 11002 # Documaker JMS Secure
  config.vm.network "forwarded_port", guest: 12002, host: 12002 # Documaker Interactive Secure
  config.vm.network "forwarded_port", guest: VM_EM_EXPRESS_PORT, host: VM_EM_EXPRESS_PORT
  
  # Provision everything on the first run
  config.vm.provision "shell", path: "scripts/install.sh", env:
    {
       "ADF_OR_SOA"             => VM_ADFSOA,
       "ZIP_ORACLEDB"           => VM_ZIP_ORACLEDB,
       "ZIP_ORACLEFMW"          => VM_ZIP_FMW,
       "JAR_ORACLEFMW"          => VM_JAR_FMW,
       "RPM_JAVA"               => VM_RPM_JAVA,
       "ZIP_ODEE"               => VM_ZIP_ODEE,
       "VM_MEMORY"              => VM_MEMORY,
       "VM_SWAP"                => VM_SWAP,
       "JAVA_PATH"              => VM_JAVA_PATH,
       "MW_HOME"                => VM_MW_HOME,
       "MW_PORT_ADMIN"          => VM_MW_PORT_ADMIN, 
       "MW_PORT_DMKR"           => VM_MW_PORT_DMKR, 
       "MW_PORT_JMS"            => VM_MW_PORT_JMS,
       "MW_PORT_IDM"            => VM_MW_PORT_IDM,
       "MW_SSLPORT_ADMIN"       => VM_MW_SSLPORT_ADMIN, 
       "MW_SSLPORT_DMKR"        => VM_MW_SSLPORT_DMKR, 
       "MW_SSLPORT_JMS"         => VM_MW_SSLPORT_JMS,
       "MW_SSLPORT_IDM"         => VM_MW_SSLPORT_IDM,
       "SYSTEM_TIMEZONE"        => VM_SYSTEM_TIMEZONE,
       "ORACLE_BASE"            => VM_ORACLE_BASE,
       "ORACLE_HOME"            => VM_ORACLE_HOME,
       "ORACLE_SID"             => VM_ORACLE_SID,
       "ORACLE_PDB"             => VM_ORACLE_PDB,
       "ORACLE_CHARACTERSET"    => VM_ORACLE_CHARACTERSET,
       "ORACLE_EDITION"         => VM_ORACLE_EDITION,
       "LISTENER_PORT"          => VM_LISTENER_PORT,
       "EM_EXPRESS_PORT"        => VM_EM_EXPRESS_PORT,
       "ORACLE_PWD"             => VM_ORACLE_PWD,
       "WLS_PWD"                => VM_WLS_PWD,
       "ODEE_HOME"              => VM_ODEE_HOME,
       "ODEE_DOMAIN"            => VM_ODEE_DOMAIN,
       "ODEE_PWD"               => VM_ODEE_PWD,
       "ODEE_SCHEMA_PWD"        => VM_ODEE_SCHEMA_PWD,
       "WAS_ADMIN"              => VM_WAS_ADMIN,
       "WAS_HOME"               => VM_WAS_HOME,
       "WAS_PWD"                => VM_WLS_PWD,
       "UPDI_HOME"              => VM_UPDI_HOME
    }

end
